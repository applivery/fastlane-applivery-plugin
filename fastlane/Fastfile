desc "Generate a new build and upload it to Applivery.com"

# iOS App build and deploy
platform :ios do
  lane :applivery_deploy do
    gym(
      scheme: "YOUR_APP_SCHEME",                  # Your App Scheme
      export_method: 'enterprise')                # Choose between: enterprise or ad-hoc
    applivery(
      app_token: "YOUR_APP_ID",                   # Applivery App Token
      #name: "YOUR_API_KEY",                      # Applivery Build name
      #notify_collaborators: "YOUR_BUILD_NAME",   # OPTIONAL: Notify Collaborators after deploy
      #notify_employees: false,                   # OPTIONAL: Notify Employees after deploy
      #notify_message: "Uploaded with fastlane",  # OPTIONAL: Notification message
      #changelog: "fastlane",                     # OPTIONAL: Release notes
      #tags: true,                                # OPTIONAL: Tags to identify the build
      #filter: true,                              # OPTIONAL: List of groups that will be notified
      #build_path: "YOUR_APP.ipa"                 # OPTIONAL: by default it takes the IPA build path generated by gym
      )
  end
end

# Android App build and deploy
platform :android do
  lane :applivery_deploy do
    gradle(task: "assembleRelease")
    applivery(
      app_token: "YOUR_APP_ID",                   # Applivery App Token
      #name: "YOUR_API_KEY",                      # Applivery Build name
      #notify_collaborators: "YOUR_BUILD_NAME",   # OPTIONAL: Notify Collaborators after deploy
      #notify_employees: false,                   # OPTIONAL: Notify Employees after deploy
      #notify_message: "Uploaded with fastlane",  # OPTIONAL: Notification message
      #changelog: "fastlane",                     # OPTIONAL: Release notes
      #tags: true,                                # OPTIONAL: Tags to identify the build
      #filter: true,                              # OPTIONAL: List of groups that will be notified
      #build_path: "YOUR_APP.apk"                 # OPTIONAL: by default it takes the APK build path generated by gradle
      )
  end
end
